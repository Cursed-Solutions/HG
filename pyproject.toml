[tool.black]
include = ".*pyi?$"
line-length = 84
skip-magic-trailing-comma = true
target-version = ["py310"]

[tool.flake8]
accept-encodings = "utf-8"
count = true
docstring-convention = "numpy"
eradicate-aggressive = true
force-future-annotations = true
ignore-decorators = "overload"
max-complexity = 20
max-function-length = 100
max-line-length = 100
min_python_version = "3.10"
pep585-activation = "always"
show_source = false
statistics = false
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "E501",
    "FA100",
    "FA101",
    "F841",
    "INP001",
    "S101",
    "T101",
    "W503",
    "E701",    # Incompatible with black: E701 multiple statements on one line (colon)
    "E704",    # Incompatible with black: E704 multiple statements on one line (def)
    #"ASYNC910", # Return from async function with no guaranteed checkpoint or exception since function definition.
]
per-file-ignores = [
    "*.py: ASYNC910", # Return from async function with no guaranteed checkpoint or exception since function definition.
    "docs_src/*.py: ASYNC910, DALL000",
    "docs_src/events.py: ASYNC910, DALL000, F821",
    "noxfile.py: ASYNC910, DALL000, E402, F401, F402, F403",
]

[tool.isort]
profile = "black"
force_single_line = true

[tool.mypy]
# some good strict settings
python_version = "3.10"
strict = true
warn_unreachable = true

# more narrow type ignores
show_error_codes = true

# these are used by pyright
warn_unused_ignores = false
warn_redundant_casts = false

# compatibility with pyright
allow_redefinition = true
disable_error_code = ["no-untyped-def", "type-abstract"]

[tool.piped]
default_sessions = ["reformat", "verify-markup",  "flake8", "spell-check",  "type-check"]
hide = [
    "slot-check",
    "build",
    "publish",
    "test-publish",
    "test",
    "test-coverage",
    "verify-types",
]
mypy_allowed_to_fail = true
mypy_targets = ["docs_src"]
path_ignore = "docs\\/images\\/.+"
top_level_targets = ["./docs_src", "./noxfile.py"]

[tool.piped.github_actions."*"]
default_py_ver = "3.10"

[tool.piped.github_actions.freeze_for_pr]
[tool.piped.github_actions.lint]
[tool.piped.github_actions.pr_docs]
[tool.piped.github_actions.reformat]
[tool.piped.github_actions.release_docs]
BRANCH_PUSHES = ["master"]

[tool.piped.github_actions.resync_piped]
[tool.piped.github_actions.type_check]
[tool.piped.github_actions.update_licence]
[tool.piped.github_actions.upgrade_locks]
[tool.piped.github_actions.verify_locks]

[tool.pyright]
include = ["docs_src", "noxfile.py"]

pythonVersion = "3.10"
typeCheckingMode = "strict"
reportMissingModuleSource = "error"  # Is only "warning" on strict mode.

# Error code which are disabled even when general strict.
reportShadowedImports = "error"
reportCallInDefaultInitializer = "none"  # Ended up just complaining about cases where this was fine (e.g. timedeltas).
reportImplicitStringConcatenation = "none"  # Conflicts with flake8 config.
reportMissingSuperCall = "none"  # Way too strict (requires calls to `object.__init__`).
reportPropertyTypeMismatch = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "none"  # Enforces doing `_ = ...`.

# Don't care about these
reportUnusedFunction = "none"
reportUnusedVariable = "none"
